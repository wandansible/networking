---
- name: Get existing netplan configuration files
  ansible.builtin.find:
    paths: /etc/netplan
    patterns: "*.yml,*.yaml"
  register: _netplan_configs

- name: Remove existing netplan configuration files
  ansible.builtin.file:
    path: "{{ item['path'] }}"
    state: absent
  loop: "{{ _netplan_configs['files'] }}"
  loop_control:
    label: "{{ item['path'] }}"
  when:
    - item['path'] != "/etc/netplan/10-ansible.yaml"
    - network_interfaces | length >= 1

- name: Configure netplan network interfaces
  ansible.builtin.template:
    src: netplan.yaml
    dest: /etc/netplan/10-ansible.yaml
    owner: root
    group: root
    mode: u=rw,g=,o=
  when: "network_interfaces | length >= 1"
  notify:
    - confirm network change
    - netplan apply

- name: Configure additional netplan network interfaces
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/netplan/{{ item | basename }}"
    owner: root
    group: root
    mode: u=rw,g=,o=
  with_fileglob:
    - "../../../templates/netplan/{{ inventory_hostname }}/*"
  notify:
    - confirm network change
    - netplan apply

- name: Install networkd-dispatcher
  ansible.builtin.apt:
    pkg:
      - networkd-dispatcher
    install_recommends: false
  when: network_hooks | length >= 1

- name: Configure networkd-dispatcher hooks
  ansible.builtin.template:
    src: "hook"
    dest: >-
      {{ "/etc/networkd-dispatcher/"
         + networkd_dispatcher_phase_map[item.phase] + ".d/"
         + item.name }}
    owner: "root"
    group: "root"
    mode: "u=rwx,g=rx,o=rx"
  loop: "{{ network_hooks }}"
  loop_control:
    label: "{{ item.name }}"
  notify:
    - confirm network change
    - netplan apply

- name: Enable or disable systemd-networkd-wait-online systemd service
  ansible.builtin.systemd:
    name: "systemd-networkd-wait-online.service"
    enabled: "true"
  when:
    - network_systemd_wait_online
    - netplan_renderer == "networkd"

- name: Enable or disable NetworkManager-wait-online systemd service
  ansible.builtin.systemd:
    name: "NetworkManager-wait-online.service"
    enabled: "true"
  when:
    - network_systemd_wait_online
    - netplan_renderer == "NetworkManager"
