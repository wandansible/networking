#jinja2: trim_blocks: "false", lstrip_blocks: "true"
# {{ ansible_managed }}

{% macro interface_block(interface) %}
  {% set addresses = interface['families'] | selectattr('address', 'defined') | map(attribute='address') | list %}
  {% set static_families = interface['families'] | selectattr('type', 'equalto', 'static') | list %}
    {{ interface['name'] }}:
  {% if 'bridge_ports' in interface %}
      interfaces: {{ '[' + interface['bridge_ports'] | join(', ') + ']' }}
  {% endif %}
  {% if addresses | length >= 1 %}
      addresses:
    {% for address in addresses %}
        - "{{ address }}"
    {% endfor %}
  {% endif %}
  {% for family in interface['families'] %}
    {% set family_version = family['name'].replace('ipv', '') %}
    {% if 'gateway' in family %}
      gateway{{ family_version }}: "{{ family['gateway'] }}"
    {% endif %}
    {% if family['type'] in ['dhcp', 'auto'] %}
      dhcp{{ family_version }}: true
    {% endif %}
  {% endfor %}
  {% if static_families | length >=1 %}
    {% if dns_nameservers_v4 | union(dns_nameservers_v6) | union(dns_search) | length >= 1 %}
      nameservers:
      {% if dns_nameservers_v4 | union(dns_nameservers_v6) | length >= 1 %}
        addresses:
        {% for nameserver in dns_nameservers_v4 | union(dns_nameservers_v6) | unique %}
          - "{{ nameserver }}"
        {% endfor %}
      {% endif %}
      {% if dns_search | length >= 1 %}
        search:
        {% for domain in dns_search %}
          - {{ domain }}
        {% endfor %}
      {% endif %}
    {% endif %}
  {% endif %}
  {% if 'mtu' in interface %}
      mtu: {{ interface['mtu'] }}
  {% endif %}
      {{ 'optional: false' if interface['waitonboot'] else 'optional: true' }}
{% endmacro -%}

network:
  version: 2
  renderer: {{ netplan_renderer }}
{% set ethernets = network_interfaces | selectattr('bridge_ports', 'undefined') | list %}
{% if ethernets | length >= 1 %}
  ethernets:
  {% for interface in ethernets %}
{{ interface_block(interface) }}
  {% endfor %}
{% endif %}
{% set bridges = network_interfaces | selectattr('bridge_ports', 'defined') | list %}
{% if bridges | length >= 1 %}
  bridges:
  {% for interface in bridges %}
{{ interface_block(interface) }}
  {% endfor %}
{% endif %}
