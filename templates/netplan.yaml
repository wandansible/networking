#jinja2: trim_blocks: False, lstrip_blocks: True
---
# {{ ansible_managed }}

{% macro interface_block(interface) %}
  {% set addresses = interface['families'] | selectattr('address', 'defined') | map(attribute='address') | list %}
  {% set static_families = interface['families'] | selectattr('type', 'equalto', 'static') | list %}
  {% set nameservers = interface['dns_nameservers'] | default([]) %}
  {% set search = interface['dns_search'] | default([]) %}
    {{ interface['name'] }}:
  {% if 'bridge_ports' in interface %}
      interfaces: {{ '[' + interface['bridge_ports'] | join(', ') + ']' }}
  {% endif %}
  {% if 'match_mac' in interface %}
      match:
        macaddress: {{ interface['match_mac'] }}
      set-name: {{ interface['name'] }}
  {% endif %}
  {% if addresses | length >= 1 %}
      addresses:
    {% for address in addresses %}
        - "{{ address }}"
    {% endfor %}
  {% endif %}
  {% for family in interface['families'] %}
    {% set family_version = family['name'].replace('ipv', '') %}
    {% if 'gateway' in family %}
      gateway{{ family_version }}: "{{ family['gateway'] }}"
    {% endif %}
    {% if family['type'] in ['dhcp', 'auto'] %}
      dhcp{{ family_version }}: true
      {% if nameservers | length >= 1 %}
      dhcp{{ family_version }}-overrides:
        use-dns: false
      {% endif %}
    {% endif %}
  {% endfor %}
  {% if nameservers | union(search) | length >= 1 %}
      nameservers:
    {% if nameservers | length >= 1 %}
        addresses:
      {% for nameserver in nameservers %}
          - "{{ nameserver }}"
      {% endfor %}
    {% endif %}
    {% if search | length >= 1 %}
        search:
      {% for domain in search %}
          - {{ domain }}
      {% endfor %}
    {% endif %}
  {% endif %}
  {% if 'mtu' in interface %}
      mtu: {{ interface['mtu'] }}
  {% endif %}
      {{ 'optional: false' if interface['waitonboot'] else 'optional: true' }}
  {% if 'access_points' in interface %}
      access-points:
    {% for ap in interface['access_points'] %}
      {% if 'password' in ap %}
        "{{ ap['ssid'] }}":
          auth:
        {% if 'key-management' in ap %}
            key-management: {{ ap['key-management'] | lower }}
        {% else %}
            key-management: psk
        {% endif %}
        {% if 'method' in ap %}
            method: {{ ap['method'] | lower }}
        {% endif %}
        {% if 'phase2-auth' in ap %}
            phase2-auth: {{ ap['phase2-auth'] | upper }}
        {% endif %}
        {% if 'identity' in ap %}
            identity: "{{ ap['identity'] }}"
        {% endif %}
            password: "{{ ap['password'] }}"
      {% else %}
        "{{ ap['ssid'] }}": {}
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if interface['link'] is defined and interface['link'] != "" %}
      link: {{ interface['link'] }}
  {% endif %}
  {% if interface['id'] is defined and interface['id'] != "" %}
      id: {{ interface['id'] }}
  {% endif %}
{% endmacro -%}

network:
  version: 2
  renderer: {{ netplan_renderer }}
{% set ethernets = network_interfaces | selectattr('bridge_ports', 'undefined') | selectattr('access_points', 'undefined') | list %}
{% if ethernets | length >= 1 %}
  ethernets:
  {% for interface in ethernets %}
{{ interface_block(interface) }}
  {%- endfor %}
{% endif %}
{% set wifis = network_interfaces | selectattr('access_points', 'defined') | list %}
{% if wifis | length >= 1 %}
  wifis:
  {% for interface in wifis %}
{{ interface_block(interface) }}
  {%- endfor %}
{% endif %}
{% set bridges = network_interfaces | selectattr('bridge_ports', 'defined') | list %}
{% if bridges | length >= 1 %}
  bridges:
  {% for interface in bridges %}
{{ interface_block(interface) }}
  {%- endfor %}
{% endif %}
{% set vlans = [] %}
{% for interface in network_interfaces | selectattr('vlans', 'defined') | list %}
  {% for vlan in interface['vlans'] %}
    {% set _ = vlans.append({ 'name': interface['name'] + '.' + vlan['id'] | string, 'link': interface['name'] } | combine(vlan)) %}
  {% endfor %}
{% endfor %}
{% if vlans | length >= 1 %}
  vlans:
  {% for interface in vlans %}
{{ interface_block(interface) }}
  {%- endfor %}
{% endif %}
